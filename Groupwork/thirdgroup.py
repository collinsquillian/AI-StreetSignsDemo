accuracy=tf.reduce_mean(tf.cast(print_out,tf.float32))
loss=tf.reduce_mean(tf.nn.sparse_softmax_cross_entropy_with_logits(labels=y,logits=logits))
images_flat=tf.contrib.layers.flatten(x)
print("images_flat: ", images_flat)
logits=tf.contrib.layers.fully_connected(images_flat,62,tf.nn.relu)
print("logits: ", logits)
y = tf.placeholder(dtype=tf.int32, shape=[None])
correct_pred=tf.argmax(logits,1)
x = tf.placeholder(dtype=tf.float32, shape=[None,28,28])
x = tf.Print(x,[x])
print_out = tf.Print(correct_pred, [loss], "Current loss: ")
print("loss: ", loss)
print("predicted_labels: ", correct_pred)
train_op=tf.train.AdamOptimizer(learning_rate=0.001).minimize(loss)